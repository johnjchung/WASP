package main

import (
	"github.com/gin-gonic/gin"
	"math"
	"os"
)

func int_conv(anything interface{}) int {
	switch v := anything.(type) {
		case int:
			return v
		case float64, float32:
			var float_var = v.(float64)
			return int(math.Trunc(float_var))
		default:
			return 0
	}
	return 0
}

func float_conv(anything interface{}) float64 {
 	 switch v := anything.(type) {
		case int:
            return float64(v)
		case float64:
			return v
		default:
			return 0
	}
	return 0.0
}

type ftoc_struct struct {
	A float64 `db:"a" json:"a"`
	B int `db:"b" json:"b"`
	C string `db:"c" json:"c"`
	D bool `db:"d" json:"d"`
}

func main() {
	router := gin.Default()
	router.GET("/ftoc", Get_ftoc)
	router.Run(":"+os.Getenv("PORT"))
}

func float_func() float64 {
	return 1.
}

func int_func() int {
	return 1
}

func string_func() string {
	return "hey"
}

func bool_func() bool {
	return true
}

func ftoc_struct_wrapper() ftoc_struct {
	return ftoc_struct{A: float_func(), B: int_func(), C: string_func(), D: bool_func()}
}

func Get_ftoc(c *gin.Context) {
	ftoc_struct := ftoc_struct_wrapper()
	c.JSON(200, ftoc_struct)
}
