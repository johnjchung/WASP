package main

import (
	"github.com/gin-gonic/gin"
	"math"
	"os"
)

func int_conv(anything interface{}) int {
	switch v := anything.(type) {
		case int:
			return v
		case float64, float32:
			var float_var = v.(float64)
			return int(math.Trunc(float_var))
		default:
			return 0
	}
	return 0
}

func float_conv(anything interface{}) float64 {
 	 switch v := anything.(type) {
		case int:
            return float64(v)
		case float64:
			return v
		default:
			return 0
	}
	return 0.0
}

var a = 4

type e_struct struct {
	B int `db:"b" json:"b"`
}

func main() {
	router := gin.Default()
	router.GET("/e", Get_e)
	router.Run(":"+os.Getenv("PORT"))
}

func e_struct_wrapper() e_struct {
	return e_struct{B: a}
}

func Get_e(c *gin.Context) {
	e_struct := e_struct_wrapper()
	c.JSON(200, e_struct)
}
